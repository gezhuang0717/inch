os: linux
dist: bionic
language: cpp

common_sources: &all_sources
  - ubuntu-toolchain-r-test


jobs:
  include:

    # GCC Builds
    # GCC <8 does have the std::filesystem
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['g++-8']
            - ninja-build
            - lcov
      env: COMPILER='g++-8'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-8']
            - ninja-build
            - libstdc++-8-dev
            - lcov
      env: COMPILER='clang++-8'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-9']
            - ninja-build
            - libstdc++-8-dev
            - lcov
      env: COMPILER='clang++-9'


before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -GNinja -H. -B../Debug-build -DINCH_CODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug
  - cmake -GNinja -H. -B../Release-build -DINCH_CODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Release


script:
  - cmake --build ../Debug-build
  - cd ../Debug-build
  - ctest -V
  - cmake --build ../Release-build
  - cd ../Release-build
  - ctest -V

after_success:
  # Create lcov report
  # capture coverage info
  - lcov --directory . --capture --output-file coverage.info
  # filter out system and test files.
  - lcov --remove coverage.info '/usr/*' '*/tests/*' '*/external/*' --output-file coverage.info
  # output coverage data for debugging (optional)
  - lcov --list coverage.info
  # Uploading to CodeCov
  # '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
