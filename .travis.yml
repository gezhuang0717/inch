dist: bionic
sudo: false
language: cpp

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-bionic-9.0


matrix:
  include:

    # GCC Builds
    # GCC <8 does have the std::filesystem

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['g++-8']
            - ninja-build
            #- lcov
      env: COMPILER='g++-8'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['g++-9']
            - ninja-build
            #- lcov
      env: COMPILER='g++-9'


    # LLVM/Clang Builds
    # clang <7 does not have std::filesystem

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-7.0']
            - ninja-build
            #- lcov
      env: COMPILER='clang++-7.0'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-8.0']
            - ninja-build
            #- lcov
      env: COMPILER='clang++-8.0'

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages:
            - ['clang-9.0']
            - ninja-build
            #- lcov
      env: COMPILER='clang++-9.0'


before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -GNinja -H. -B../Debug-build -DCMAKE_BUILD_TYPE=Debug
  - cmake -GNinja -H. -B../Release-build -DCMAKE_BUILD_TYPE=Release


script:
  - cmake --build ../Debug-build
  - cd ../Debug-build
  - ctest -V
  - cmake --build ../Release-build
  - cd ../Release-build
  - ctest -V

#after_success:
#  # Create lcov report
#  # capture coverage info
#  - lcov --directory . --capture --output-file coverage.info
#  # filter out system and test files.
#  - lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info
#  # output coverage data for debugging (optional)
#  - lcov --list coverage.info
#  # Uploading to CodeCov
#  # '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
#  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
