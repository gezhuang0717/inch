# Make sure the submodules are pulled in
# Set the compiler versions
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GCC_VERSION: 8
  CLANG_VERSION: 8

# Only trigger a build if any of the below files change
.fileignore_template: &CI_Ignore
  rules:
    changes:
      - CMakelists.txt
      - cmake/*.cmake
      - .gitlab-ci.yml
      - src/*.cpp
      - include/inch/*.hpp
      - tests/*

# Generic commands for building
.build__template: &Build
  - cmake --build ./build

# Generic commands for moving to the build directory and running tests
.run_test_template: &RunTests
  - cd build
  - ctest -j2 -V

# Which packages are required for GCC compilation
.gcc_install_template: &GCCPackages
  - apt -y install gcc g++ gcc-$GCC_VERSION g++-$GCC_VERSION

# Which pacakges are required for clang compilation
.clang_install_template: &ClangPackages
  - apt -y install clang clang-$CLANG_VERSION libstdc++-$CLANG_VERSION-dev

# Configuration steps to inherit from
.configure_template:
  stage: configure
  <<: *CI_Ignore
  tags:
    - linux
  artifacts:
    paths:
      - build

# Build steps to inherit from
.build_template:
  stage: build
  <<: *CI_Ignore
  tags:
    - linux
  artifacts:
    paths:
      - build

# Test steps to inherit form
.test_template:
  stage: test
  <<: *CI_Ignore
  tags:
    - linux

# Specify "rolling" rather than "latest"
# We need gcc >=8 and clang >=7 for std::filesystem
image: ubuntu:rolling

# List the stages to be run
stages:
  - configure
  - build
  - test

# Install common packages for all stages
before_script:
  - apt update && apt -y install cmake ninja-build

# GCC - Debug
gcc-configure-Debug:
  extends: .configure_template
  script:
    - *GCCPackages
    - cmake -H. -B./build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++-$GCC_VERSION -DCMAKE_BUILD_TYPE=Debug

gcc-build-Debug:
  extends: .build_template
  script:
    - *GCCPackages
    - *Build
  dependencies:
    - gcc-configure-Debug

gcc-test-Debug:
  extends: .test_template
  script:
    - *GCCPackages
    - *RunTests
  dependencies:
    - gcc-build-Debug


# GCC - Release
gcc-configure-Release:
  extends: .configure_template
  script:
    - *GCCPackages
    - cmake -H. -B./build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++-$GCC_VERSION -DCMAKE_BUILD_TYPE=Release

gcc-build-Release:
  extends: .build_template
  script:
    - *GCCPackages
    - *Build
  dependencies:
    - gcc-configure-Release

gcc-test-Release:
  extends: .test_template
  script:
    - *GCCPackages
    - *RunTests
  dependencies:
    - gcc-build-Release


# Clang - Debug
clang-configure-Debug:
  extends: .configure_template
  script:
    - *ClangPackages
    - cmake -H. -B./build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-$CLANG_VERSION -DCMAKE_BUILD_TYPE=Debug

clang-build-Debug:
  extends: .build_template
  script:
    - *ClangPackages
    - *Build
  dependencies:
    - clang-configure-Debug

clang-test-Debug:
  extends: .test_template
  script:
    - *ClangPackages
    - *RunTests
  dependencies:
    - clang-build-Debug


# Clang - Release
clang-configure-Release:
  extends: .configure_template
  script:
    - *ClangPackages
    - cmake -H. -B./build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-$CLANG_VERSION -DCMAKE_BUILD_TYPE=Release

clang-build-Release:
  extends: .build_template
  script:
    - *ClangPackages
    - *Build
  dependencies:
    - clang-configure-Release

clang-test-Release:
  extends: .test_template
  script:
    - *ClangPackages
    - *RunTests
  dependencies:
    - clang-build-Release
