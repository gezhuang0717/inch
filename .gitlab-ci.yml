# Don't trigger the pipline if only one of these files has changed
.fileignore_template: &CI_Ignore
  except:
    changes:
      - "*.md"
      - appveyor.yml
      - .travis.yml
      - .circleci/*
      - .github/*
      - scripts/*
      - images/*
      - data_files/*
      - docs/*

# Generic commands for building and running the tests
.build_and_test_template: &Build_n_Test
  - cmake --build ../build
  - cd ../build
  - ctest -j2 -V

stages:
  - gcc-build
  - clang-build

# Specify "rolling" rather than "latest"
# We need gcc >=8 and clang >=7 for std::filesystem
image: ubuntu:rolling

# Install the required packages to run the jobs of all stages
before_script:
  - apt update && apt -y install cmake ninja-build

# Make sure the submodules are pulled in
variables:
  GIT_SUBMODULE_STRATEGY: recursive

# GCC
gcc-build-Debug:
  stage: gcc-build
  <<: *CI_Ignore
  tags:
    - linux
  script:
    - apt -y install gcc g++ gcc-8 g++-8
    - cmake -H. -B../build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 -DCMAKE_BUILD_TYPE=Debug
    - *Build_n_Test

gcc-build-Release:
  stage: gcc-build
  <<: *CI_Ignore
  tags:
    - linux
  script:
    - apt -y install gcc g++ gcc-8 g++-8
    - cmake -H. -B../build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/g++-8 -DCMAKE_BUILD_TYPE=Release
    - *Build_n_Test

# clang/LLVM
clang-build-Debug:
  stage: clang-build
  <<: *CI_Ignore
  tags:
    - linux
  script:
    - apt -y install clang clang-8 libstdc++-8-dev
    - cmake -H. -B../build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-8 -DCMAKE_BUILD_TYPE=Debug
    - *Build_n_Test

clang-build-Release:
  stage: clang-build
  <<: *CI_Ignore
  tags:
    - linux
  script:
    - apt -y install clang clang-8 libstdc++-8-dev
    - cmake -H. -B../build -GNinja -DINCH_UNIT_TESTS=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-8 -DCMAKE_BUILD_TYPE=Release
    - Build_n_Test
